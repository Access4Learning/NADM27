<Section name="Student Record Exchange Services" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<table>
		<thead>
			<tr>
				<td>Zone Service</td>
				<td>Description</td>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>serviceSREBroker</td>
				<td>Acts as an optional intermediary among publishers and consumers.</td>
			</tr>
			<tr>
				<td>serviceSREPublisher</td>
				<td>Publishes student records.</td>
			</tr>
			<tr>
				<td>serviceSREConsumer</td>
				<td>Requests and consumes student records.</td>
			</tr>
			<tr>
				<td>serviceSREAcademicRecordConsumer</td>
				<td>A consumer of academic student records.</td>
			</tr>
			<tr>
				<td>serviceSREDemographicRecordConsumer</td>
				<td>A consumer of demographic student records.</td>
			</tr>
			<tr>
				<td>serviceSRESpecialEducationRecordConsumer</td>
				<td>A consumer of special education student records.</td>
			</tr>
		</tbody>
	</table>
	<Section name="Overview">
		<p>Student Record Exchange (SRE) Services functionality is comprised of six SIF Zone Services that enable trading partners to publish, exchange, and consume electronic transcripts and student records over the SIF infrastructure. The services support both direct and brokered models of student record exchange. </p>
		<p>The primary goals of the Student Record Exchange Services are:</p>
		<ul>
			<li>
				<p>To enable Student Record Exchange choreography between trading partners and brokers, accommodating all of the use cases identified by the Student Record Exchange Task Force. Using the set of core services defined here, an agent should be able to participate in any of these use cases without knowledge of how a broader student record exchange system is constructed or deployed. </p>
			</li>
			<li>
				<p>To enable Student Record Exchange choreography in a way that can be accomplished with or without an intermediary broker. Brokers are used to conduct electronic transcript and student records transfer between trading partners that do not know of one another; for example, to implement LEA-to-LEA student transfer or LEA-to-Postsecondary transcript exchange.</p>
			</li>
			<li>
				<p>Provide an unambiguous method of implementing the “last mile” of student record exchange – specifically LEA-to-LEA student records transfer – whereby applications that are authoritative for student records must also be able to consume those records.</p>
			</li>
		</ul>
	</Section>
	<Section name="Terminology">
		<p>The term trading partner in this document encompasses all types of organizations that might wish to participate in student record exchanges, including LEAs, SEAs, colleges and universities, non-educational organizations, and so on. Student Record Exchanges are carried out between trading partners. It’s important to keep in mind that a trading partner might represent more than one agency; for example, a data warehouse maintained by a SEA might contain transcript data for many students from many LEAs. </p>
		<p>The term broker means an intermediary system that acts as a value-add intermediary between trading partners for the purpose of exchanging transcripts or student records. A broker may itself be considered a trading partner.</p>
		<p>In this document, the term agency usually means an LEA. The sending agency is the LEA that is furnishing student records, and the receiving agency is the LEA that is receiving those records.</p>
	</Section>
	<Section name="Student and Agency Identifiers">
		<p>All service messages and objects defined in this document identify students and agencies by StateProvinceId. </p>
		<p>A StateProvinceId is a unique identifier that is assigned outside the scope of SIF, typically by a state department of education. For students, the StateProvinceId can be obtained from the StudentPersonal/StateProvinceId element, as well as from the StudentRecordExchange/StateProvinceId element. For agencies that are represented by a LEAInfo object, it can be obtained from the LEAInfo/StateProvinceId element. </p>
		<p>It is the responsibility of agents implementing these services to resolve StateProvinceId to a local identifier when needed. Further, because local identifiers are not unique outside of the organization that assigns them, it is not feasible to use local identifiers or SIF RefIds in student record exchange transactions, which span multiple trading partners. It is therefore assumed that any trading partner participating in a student record exchange program has obtained unique StateProvinceId identifiers for students involved in SRE transactions.</p>
	</Section>
	<Section name="SRE Services Overview">
		<p>Student Record Exchange Services are divided into two categories: Transaction Services and Consumer Services. </p>
		<p>Transaction Services allow trading partners to publish and receive StudentRecordExchange objects at the request of another trading partner or broker. They offer a transactional, service-oriented alternative to the data-oriented SIF_Request/SIF_Response model of exchanging data. Transaction Services are intended to be implemented by intermediary agents that collaborate to form a comprehensive student record exchange system; providers of student data such as SIS systems do not typically implement these services. Transaction Services include:</p>
		<ul>
			<li>SRE Publisher</li>
			<li>SRE Consumer</li>
			<li>SRE Broker</li>
		</ul>
		<p>Consumer Services offer fine-grain control over importing student data into target systems such as SIS and special education packages. Whereas the Transaction Services deal in StudentRecordExchange objects, the optional Consumer Services each address a specific record type contained in that object. The services are organized by record type so that different consumer systems can import select parts of a StudentRecordExchange object independent of other consumers in a zone. Consumer Services are intended to be implemented by local providers of student data such as SIS systems. They include:</p>
		<ul>
			<li>SRE Student Demographic Record Consumer</li>
			<li>SRE Student Academic Record Consumer</li>
			<li>SRE Student Special Education Record Consumer</li>
		</ul>
		<p>The minimum SIF_MaxBufferSize recommended for SIF Zone Services is 64K. In order for service messages to packetize StudentRecordExchangeData elements, the buffer size used must be large enough to accommodate the largest element of that object. StudentRecordPackage objects in particular can be larger than 64K if they contain Base64-encoded binary files such as photographs and documents that are transmitted with a student’s transcript or records. </p>
		<p>Each service method defined here accepts a minimum of three input parameters: StudentId, SendingAgencyId, and ReceivingAgencyId. While these parameters are sufficient for all implementations to identify the student and agencies involved in a student record exchange, systems may need to be able to convey additional vendor-specific parameters. The optional ExtendedParameters element can be used for this purpose.</p>
	</Section>
	<Section name="Intermediary Agents">
		<p>In much the same way as SIF Vertical Reporting solutions rely on intermediary agents that collaborate to implement the overall vertical reporting choreography, a comprehensive student record exchange solution will also make use of intermediary agents in most cases. For example, a commercial state-wide solution might employ several components that collaborate to implement electronic transcript and student records transfer:</p>
		<ul>
			<li>A "broker" at the state level to manage communication between trading partners that do not directly know of one another </li>
			<li>A "publisher agent" at the LEA level to publish student record exchanges at the request of the broker, or directly from other consumer agents. This intermediary might work with local SIF Zones to query and gather data that is needed to fulfil a StudentRecordExchange request.</li>
			<li>A "consumer agent" at the LEA level to consume student record exchanges received from the broker, or directly from other publisher agents. This agent might work with local SIF Zones to consume data into target systems such as student information systems.</li>
		</ul>
		<p>While the Student Record Exchange Services defined here do not require intermediary agents – any two agents that implement the SRE Publisher and SRE Consumer services can directly exchange student records – they are designed to not only accommodate but to promote their use. </p>
		<p>There are numerous benefits to using intermediary agents. First and foremost, intermediary agents remove the burden of specializing in Student Record Exchange choreography from the broader audience of SIF Agents. By implementing only the SRE Student Demographic Record Consumer service, for example, a student information system SIF Agent can participate in basic LEA-to-LEA student records transfer without the vendor having to know anything about how the overall system is implemented (which may vary widely from state to state). This is particularly important in realizing widespread adoption of student record exchange capabilities in the marketplace.</p>
		<p>Another important benefit to using intermediary agents is that they make it possible to build a comprehensive student record exchange solution with a consistent feature set, user experience, and level of service regardless of the mix of SIF Agents that are used in the overall solution.</p>
		<p>Figure 1 illustrates the use of intermediary agents in an overall student record exchange solution:</p>
		<p>
			<img src="images/SREFigure1.png" alt=""/>
		</p>
	</Section>
	<Section name="Transaction Services">
		<p>The SRE Transaction Services are comprised of the SRE Publisher, SRE Consumer, and SRE Broker services. </p>
		<p>The SRE Publisher and SRE Consumer services allow for direct exchange of student records between trading partners or the indirect exchange between trading partners and a broker. The SRE Publisher service represents a trading partner that can furnish student records. Its GetRecordExchange method is called to request the records for a given student and sending agency. The SRE Consumer service represents a trading partner that can consume student records. Its SetRecordExchange method is called to “push” student records to the trading partner. It is worth repeating here that trading partners do not always represent LEAs, nor do they always represent the ultimate source or destination of data. A state department of education, for example, might act as a trading partner to furnish student records from a data warehouse. In this scenario the SEA might implement both the SRE Publisher and SRE Consumer services (in addition to LEAs implementing these services as well).</p>
		<p>The SRE Broker service allows for brokered exchanges between trading partners that do not know of one another. Its GetRecordExchange method is called to request that records be retrieved for a given student and sending agency. Depending on the business rules and capabilities of the overall student record exchange system, a transaction with a broker can move data from a sending agency to a receiving agency either at the request of the sender or at the request of the receiver. Initiating a request from the receiving agency is by far the most common scenario.</p>
		<p>
			<img src="images/SREFigure2.png" alt=""/>
		</p>
	</Section>
	<Section name="Requesting Student Records Directly from a Trading Partner">
		<p>When a trading partner wishes to request a StudentRecordExchange object set from another trading partner, it calls the GetRecordExchange method of the SRE Publisher service. The method parameters include:</p>
		<ol>
			<li>StateProvinceId of the student </li>
			<li>StateProvinceId of the sending agency (the agency supplying the data)</li>
			<li>StateProvinceId of the receiving agency (the agency requesting the data) </li>
		</ol>
		<p>The SRE Publisher service returns a SIF_ServiceOutput message that contains a StudentRecordExchange object set, or in the case of error, a SIF_Error element. The entire set of student records is returned as the single response to this method invocation. Because StudentRecordExchanges can be very large in size, the results may span multiple packets. The packetizing rules described by SIF Zone Services apply. </p>
		<p>Figure 3 illustrates a requestor calling the GetRecordExchange method of a publisher agent that implements the SRE Publisher service (step 1). The publisher agent issues SIF_Requests to its local zone to construct a StudentRecordExchange object set (step 2) or otherwise obtains the data according to its business rules. The results are returned back to the requesting agent (step 3). </p>
		<p>
			<img src="images/SREFigure3.png" alt=""/>
		</p>
	</Section>
	<Section name="Requesting Student Records via a Broker">
		<p>When a trading partner wishes to request a StudentRecordExchange object set from a broker, it calls the GetRecordExchange method of the SRE Broker service. The method parameters include:</p>
		<ol>
			<li>StateProvinceId of the student </li>
			<li>StateProvinceId of the sending agency (the agency supplying the data)</li>
			<li>StateProvinceId of the receiving agency (the agency requesting the data) </li>
		</ol>
		<p>The broker works with the SRE Publisher service of the trading partner representing the sending agency in order to obtain the requested data. The trading partner that’s contacted by the broker could be the LEA identified as the sending agency, or it could be a third party such as a data warehouse hosted by a SEA or other service provider. It is also possible that the broker itself can supply the student’s data from a local repository.</p>
		<p>When the student’s records are available for delivery back to the requestor, or if the transaction has failed with an error, the broker responds with a SIF_ServiceOutput message that contains either a set of StudentRecordExchange objects or a SIF_Error element with error information. The entire set of student records is returned as the single response to this method invocation. Because StudentRecordExchanges can be very large in size, the results may span multiple packets. The packetizing rules described by SIF Zone Services apply. </p>
		<p>If the broker cannot satisfy the request for any reason, it responds with a SIF_ServiceOutput message with a SIF_Error element. Possible reasons for failure include: the broker does not know how to get in touch with a trading partner representing the sending agency; that trading partner does not implement the SRE Publisher service; a communication error occurred while calling the SRE Publisher service of the trading partner; the service input parameters are invalid; and so on.</p>
		<p>Figure 4 illustrates a requestor calling the GetRecordExchange service method of a broker agent, which implements the SRE Broker service (step 1). The broker then calls the GetRecordExchange service method of a publisher agent that implements the SRE Publisher service to obtain student records (step 2). The publisher agent issues SIF_Requests to its local zone to construct a StudentRecordExchange object set (step 3) or otherwise obtains the data according to its business rules. The results are returned back to the broker agent (step 4), and then back to the requestor (step 5). </p>
		<p>
			<img src="images/SREFigure4.png" alt=""/>
		</p>
	</Section>
	<Section name="End-to-End Student Record Exchange from a Broker">
		<p>A common feature of commercial broker solutions is to provide a central user interface from which registrars manage electronic transcript and student record exchanges. Such brokers can act as the initiator of end-to-end student record exchanges, and therefore require a way to deliver student records to a receiving agency without the receiving agency having previously requested of those records. The SRE Consumer service enables this interaction.</p>
		<p>When a broker wishes to perform an end-to-end student record exchange, it first interacts with the SRE Publisher service of the trading partner representing the sending agency in order to obtain the student’s records. The trading partner that’s contacted by the broker could be the LEA identified as the sending agency, or it could be a third party such as a data warehouse hosted by a SEA or other service provider. It is also possible that the broker itself can supply the student’s data from a local repository.</p>
		<p>When the student’s records are available for delivery, the broker calls the SetRecordExchange method of the SRE Consumer service of the trading partner that represents the receiving agency. If the receiving agency does not implement the SRE Consumer service, it does not accept unrequested student record exchanges. </p>
		<p>The method parameters include:</p>
		<ol>
			<li>StateProvinceId of the student </li>
			<li>StateProvinceId of the sending agency (the agency supplying the data)</li>
			<li>StateProvinceId of the receiving agency (the agency requesting the data) </li>
			<li>The StudentRecordExchange object set to deliver</li>
		</ol>
		<p>The entire set of student records is provided as a parameter to the method. Because StudentRecordExchanges can be very large in size, the method invocation may span multiple SIF_ServiceInput packets. The packetizing rules described by SIF Zone Services apply.</p>
		<p>Figure 5 illustrates a broker calling the GetRecordExchange method of a publisher agent at the sending agency, which implements the SRE Publisher service (step 1). The publisher agent issues SIF_Requests to its local zone to construct a StudentRecordExchange object set (step 2) or otherwise obtains the data according to its business rules. The results are returned back to the broker agent (step 3). The broker then calls the SetRecordExchange method of a consumer agent at the receiving agency (step 4) to deliver the data to its destination. No data is returned in the response to this method (step 5), but it may contain a SIF_Error if an error occurred at the receiving agency.</p>
		<p>
			<img src="images/SREFigure5.png" alt=""/>
		</p>
	</Section>
	<Section name="Consumer Services">
		<p>Whereas the Transaction Services above describe how to move student data between trading partners and brokers, the optional Consumer Services define how to consume or import student record exchange data into target systems such as student information systems. Agents that implement the Consumer Services unambiguously declare that they can consume StudentRecordExchange data in whole or part.</p>
		<p>The StudentRecordExchange object is designed as a content package. It is comprised of several types of records (e.g. StudentDemographicRecord, StudentAcademicRecord, etc.), each of which may be provided by a different authoritative source in a zone. When consuming StudentRecordExchange data into a zone, then, it is possible that different systems will be interested in different parts of that content package. An SIS may need to import the StudentDemographicRecord into its database, and a separate special education package import StudentSpecialEducationRecord.</p>
		<p>Consumer Services are comprised of:</p>
		<ul>
			<li>SRE Student Demographic Record Consumer</li>
			<li>SRE Student Academic Record Consumer</li>
			<li>SRE Special Education Record Consumer</li>
		</ul>
		<p>All SIF Agents that supply student demographic, academic, or special education records are encouraged to implement the appropriate Consumer Services. Doing so enables the agent to participate in state-wide student record exchange initiatives, particularly LEA-to-LEA student transfer. In addition, these agents are encouraged to provide SIF_Request support for the applicable StudentDemograpicRecord, StudentAcadmicRecord, or StudentSpecialEducationRecord objects that apply to them. Doing so will make it considerably easier for intermediary publisher agents (i.e. those that implement the SRE Publisher service) to obtain the data needed to satisfy a request.</p>
		<p>If an application is capable of consuming an entire StudentRecordExchange object, it can do so via the SRE Consumer service and choose to not implement the individual record-specific Consumer Services. However, as most applications are only interested or capable of processing a subset of StudentRecordExchange, each should implement the specific Consumer Services that it supports as a best practice. This makes it clear the role each SIF Agent in a zone plays in consuming StudentRecordExchange data. It should also be noted that the SRE Consumer service is part of Transaction Services, which are intended to be implemented by intermediary agents in a comprehensive student record exchange solution. It is therefore envisioned that intermediary agents will implement the SRE Consumer service, delegating to the various Consumer Services in a zone to actually import data into target systems.</p>
	</Section>
	<Section name="Rules for Calling Consumer Services">
		<p>When an intermediary agent that implements the SRE Consumer service receives a StudentRecordExchange object set and wishes to import the data into target systems, it follows the rules below. </p>
		<p>By employing these rules, it is possible for system integrators to install consumer agents of various types in a local district zone, such that each agent can import all or part of a StudentRecordExchange object set received as part of a larger student record exchange transaction. Agents that wish to import all of a StudentRecordExchange object set can implement the single SRE Consumer service instead of the individual record-level Consumer Services. Agents that wish to import StudentRecordPackage data, for which no Consumer Service exists, should also implement the SRE Consumer service.</p>
		<p>For each local zone the intermediary agent is connected to:</p>
		<ol>
			<li>It obtains a SIF_ZoneStatus object to determine the agents in the zone that implement the SRE Consumer service or the individual record-level Consumer Services.				</li>
			<li>For each agent that implements the SRE Consumer service (excluding itself), the intermediary agent invokes the SetRecordExchange method.</li>
			<li>For each agent that implements the SRE Student Demographic Record Consumer service, the intermediary agent invokes the SetDemographicRecord method, supplying only the StudentDemographicRecord portion of the student data.</li>
			<li>For each agent that implements the SRE Student Academic Record Consumer service, the intermediary agent invokes the SetAcademicRecord method, supplying only the StudentAcademicRecord portion of the student data.	</li>
			<li>For each agent that implements the SRE Student Special Education Record Consumer service, the intermediary agent invokes the SetSpecialEducationRecord method, supplying only the StudentSpecialEducationRecord portion of the student data.</li>
		</ol>
	</Section>
	<Section name="Consuming Student Records into Target Applications">
		<p>Figure 7 illustrates how the Consumer Services can be employed in a comprehensive student record exchange solution to import data received from an intermediary agent into target applications like the student information system. Here, the LEA-to-LEA Student Records Transfer use case is demonstrated.</p>
		<p>A consumer agent at the receiving agency calls the GetRecordExchange method of the broker agent’s SRE Broker service (step 1). Student records are obtained from a publisher agent at the sending agency via the SRE Publisher service (step 2). The publisher agent issues SIF_Requests to its local zone to construct a StudentRecordExchange object set (step 3) and returns the data back to the requestor (step 4 and 5). The consumer agent then consults the SIF_ZoneStatus object of its local district zone and learns that two applications are capable of consuming student record exchange data. It asks the student information system’s agent, which implements the SRE Student Demographic Record Consumer and SRE Student Academic Record Consumer services, to import those portions of the student data (step 6 and 7). Next, it asks the special education package, which implements the SRE Student Special Education RecordConsumer service, to import the special education record (step 8).</p>
		<p>
			<img src="images/SREFigure7.png" alt=""/>
		</p>
		<p>Figure 8 depicts a variation of the above, where the SIS Agent implements the SRE Consumer service instead of the individual record-level Consumer Services. It might do this, for example, if it needs to process StudentRecordPackage data, for which no record-level Consumer Service exists.</p>
		<p>
			<img src="images/SREFigure8.png" alt=""/>
		</p>
	</Section>
	<Section name="Zone Service Operations" id="SRE_ZoneServiceOperations">
		<Section name="SRE Broker">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSREBroker</td>
						<td>
							<a href="ZoneServices.html#obj:GetRecordExchange">GetRecordExchange</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:GetRecordExchangeResponse">GetRecordExchangeResponse</a>
						</td>
						<td>Requests from the broker a StudentRecordExchange object set for a given student and sending agency.</td>
					</tr>
				</tbody>
			</table>
		</Section>
		<Section name="SRE Publisher">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSREPublisher</td>
						<td>
							<a href="ZoneServices.html#obj:GetRecordExchange">GetRecordExchange</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:GetRecordExchangeResponse">GetRecordExchangeResponse</a>
						</td>
						<td>Requests that a StudentRecordExchange object set be published for a given student and sending agency.  A Packet break can occur at the end of the StudentRecordExchangeData element in GetRecordExchangeResponse.</td>
					</tr>
				</tbody>
			</table>
		</Section>
		<Section name="SRE Consumer">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSREConsumer</td>
						<td>
							<a href="ZoneServices.html#obj:SetRecordExchange">SetRecordExchange</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:SetRecordExchangeResponse">SetRecordExchangeResponse</a>
						</td>
						<td>Requests that a StudentRecordExchange object set be consumed by a receiving agency.  For example, if a broker initiates an exchange between a sending agency and a receiving agency, it uses this service to deliver the results to the receiving agency.  A Packet break can occur at the end of the StudentRecordExchangeData element in SetRecordExchange.</td>
					</tr>
				</tbody>
			</table>
		</Section>
		<Section name="SRE Student Academic Record Consumer">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSREAcademicRecordConsumer</td>
						<td>
							<a href="ZoneServices.html#obj:SetAcademicRecord">SetAcademicRecord</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:SetAcademicRecordResponse">SetAcademicRecordResponse</a>
						</td>
						<td>Requests that a StudentAcademicRecord object for a given student be consumed. </td>
					</tr>
				</tbody>
			</table>
		</Section>
		<Section name="SRE Student Demographic Record Consumer">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSREDemographicRecordConsumer</td>
						<td>
							<a href="ZoneServices.html#obj:SetDemographicRecord">SetDemographicRecord</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:SetDemographicRecordResponse">SetDemographicRecordResponse</a>
						</td>
						<td>Requests that a StudentDemographicRecord object for a given student be consumed. </td>
					</tr>
				</tbody>
			</table>
		</Section>
		<Section name="SRE Student Special Education Record Consumer">
			<table>
				<thead>
					<tr>
						<td>Zone Service</td>
						<td>Service Input</td>
						<td>Service Output</td>
						<td>Description</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>serviceSRESpecialEducationRecordConsumer</td>
						<td>
							<a href="ZoneServices.html#obj:SetSpecialEducationRecord">SetSpecialEducationRecord</a>
						</td>
						<td>
							<a href="ZoneServices.html#obj:SetSpecialEducationRecordResponse">SetSpecialEducationRecordResponse</a>
						</td>
						<td>Requests that a StudentSpecialEducationRecord object for a given student be consumed. </td>
					</tr>
				</tbody>
			</table>
		</Section>
	</Section>
	<Section name="Service Body Definitions"  id="SRE_ServiceBodyDefinitions" sort="false">
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\GetStudentRecordExchange.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\GetStudentRecordExchangeResponse.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentRecordExchange.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentRecordExchangeResponse.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentAcademicRecord.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentAcademicRecordResponse.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentDemographicRecord.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentDemographicRecordResponse.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentSpecialEducationRecord.xml"/>
		<xi:include parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" href="US-ZoneServices\StudentRecordExchange\ConsumeStudentSpecialEducationRecordResponse.xml"/>
	</Section>
</Section>
